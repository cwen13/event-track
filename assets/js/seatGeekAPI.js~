
// object contianing city, state, startDate, & endDate
let data = JSON.parse(localStorage.getItem("timeLocation"));
console.log(data);		      
// pulled from chalne
let apiBase = "https://api.openweathermap.org/";
let apiKey = "83a44da7964246bbf900a3b2168f29ce";
let apiBaseWeather = apiBase + "data/2.5/forecast?";
let apiBaseLatLon = apiBase + "geo/1.0/direct?";
let apiBaseToday = apiBase + "data/2.5/weather?";
let apiLatLon = `${apiBaseLatLon}q=${data['city']},${data['state']}&limit=10&appid=${apiKey}`;

let latLong;
let weatherRes;



function getLatLon(geoJson, state) {
  for (let i=0; i<geoJson.length; i++) {
    if (geoJson[i]["state"] == state) {
      return [geoJson[i]["lat"].toFixed(2)
	      ,geoJson[i]["lon"].toFixed(2)];
    }
  }
  return console.log("State not found");
}

function pullStats(weatherEntry) {
  let entry = {date:"",
	       icon:"",
	       temp:"",
	       wind:"",
	       humidity:""
	      };
  let date = new Date(weatherEntry["dt"]*1000);
  entry["date"] = date.getFullYear()
    +'/'+('0'+(date.getMonth()+1)).slice(-2)
    +'/'+('0'+date.getDate()).slice(-2);
  entry["icon"] = weatherEntry["weather"][0]["icon"];
  entry["temp"] = weatherEntry["main"]["temp"];
  // add in line to get direction in NWSE
  entry["wind"] = weatherEntry["wind"]["speed"];
  entry["humidity"] = weatherEntry["main"]["humidity"];
  console.log(entry)
  return entry;
}


function getWeather (){
  let apiLatLon = `${apiBaseLatLon}q=${data['city']},${data['state']}&limit=10&appid=${apiKey}`;
   fetch(apiLatLon)
    .then(response => response.json())
    .then((info) =>{
      latLong = getLatLon(info,data["state"]);
      let apiWeather = `${apiBaseWeather}lat=${latLong[0]}&lon=${latLong[1]}&units=imperial&appid=${apiKey}`;
      fetch(apiWeather)
	.then(response => response.json())
	.then((info) => {
	  localStorage.setItem("weatherResponse", JSON.stringify(data["list"]));
	  console.log(info);
	  for (let i=0; i<info.length; i++) {
	    console.log(info[i]);
	    let readingTime = (info[i]["dt_txt"]).split(" ")[1];
	    if (readingTime === "12:00:00"){
	      buildForecast(pullStats(info[i]));
	    }
	  }

	});
    });
  let latLongObject = {latLon: latLong};
  data = Object.assign(data,latLongObject);

  //rewriting the data object
  localStorage.setItem("data",data)
  
  return 0;
}

//from chalenge
function buildForecast (weather) {
  console.log(weather);
  // reach into gloaal for weeather variable
  let weekForcast = $(".week-panel");
  let section = $("<section>");
  let date = $("<section>").text("DATE:");
  let icon = $("<img>");
  let temp = $("<section>");
  let wind = $("<section>");
  let humidity = $("<section>");

  date.text("Date: " + weather["date"]);
  icon.attr("src","http://openweathermap.org/img/wn/"+weather["icon"]+".png")
  temp.text("Temperature: " +weather["temp"]);
  wind.text("Wind speed: " + weather["wind"]);
  humidity.text("Humidity: " +weather["humidity"]);

  section.attr("class","box");
  section.append(date);
  section.append(icon);
  section.append(temp);
  section.append(wind);
  section.append(humidity);
  weekForcast.append(section);
  return 0;
}



//from resultshtml.js
/*
function buildWeatherBoxes (weather) {
  function getIcon(iconTag, j) {
    let iconURL = "http://openweathermap.org/img/wn/"+iconTag+".png";
    let icon = $("<img>");
    return icon.attr("src",iconURL);
     
  }
  
  for (let i=0;i<weather.length;i++) {
    let sectionEl = $("<section>");
    let dateEl = $("<li>");
    let iconEl = $("<li>");
    let tempEl = $("<li>");
    let percipEl = $("<li>");
  
    dateEl = weather[i]["date"];
    iconEl  = iconEl.append(getIcon(weather[i]["icon"], i));
    tempEl = weather[i]["temp"];
    percipEl = weather[i]["percip"];
    
    sectionEl.attr("class", "columns box is-primary");
    sectionEl.attr("id", "day"+i);
    sectionEl.append(dateEl);
    sectionEl.append(iconEl);
    sectionEl.append(tempEl);
    sectionEl.append(percipEl);
    
    $("#weather-panel").append(sectionEl);
  }
  return 0;
}
*/

let seatGeekBase = "https://api.seatgeek.com/2/events?";
let seatGeekClientID = "client_id=MzExMjU4NzF8MTY3MTU4MDU0NS4wMTgzOTY"
// for location lat/lon and range
// EX: geoip=98.213.245.205&range=12mi'
let location = `lat=${latLong[0]}&lon=${latLong[1]}&range=25mi`;
let perPage = "per_page=25";
// format for date range
// EX: datetime_utc.gte=2012-04-01&datetime_utc.lte=2012-04-30
let dateAPI = "datetime_utc.gte=2022-12-22&datetime_utc.lte=2022-12-30";

let seatGeekRequest = `${seatGeekBase}${location}&${perPage}&${dateAPI}&${client_id}`;

function getSeatGeekData () {
  fetch(seatGeekRequest)
    .then(response => response.json())
    .then((data) => {
      console.log(data);
    });


  return 0;
}












function main () {
  getWeather();
  console.log(weatherRes);
  getSeatGeekData()
}

main();
